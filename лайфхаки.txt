Подсказки и лайфхаки
Аутентификация и регистрация пользователей
При переносе стандартного процесса авторизации Django в формат REST API вам понадобится библиотека djoser. При подключении придётся переопределить некоторые настройки и написать кастомный вьюсет. 
Авторизация должна быть реализована с помощью токенов: пользователь регистрируется по электронной почте и паролю, отдельным запросом получает токен, затем этот токен передаётся в заголовке каждого запроса.
Сериализаторы
При публикации рецепта фронтенд кодирует картинку в строку base64; на бэкенде её необходимо декодировать и сохранить как файл. Для этого будет удобно создать кастомный тип поля для картинки, переопределив метод сериализатора to_internal_value.
Для сохранения ингредиентов и тегов рецепта потребуется переопределить методы create и update в ModelSerializer.
Используйте подходящие типы related-полей; для некоторых данных вам потребуется использовать SerializerMethodField.
Вьюсеты
Если вы решите использовать вьюсеты, то вам потребуется добавлять дополнительные action. Не забывайте о том, что для разных action сериализаторы и уровни доступа (permissions) могут отличаться.
Некоторые методы, в том числе и action, могут быть похожи друг на друга. Избегайте дублирующегося кода.
Поиск по ингредиентам
Ищите ингредиенты по полю name регистронезависимо, по вхождению в начало названия. 
Также при желании вы можете сделать двойную фильтрацию: 
по вхождению в начало названия,
по вхождению в произвольном месте.
Сортировка в таком случае должна быть от первых ко вторым. Реализация двойной фильтрации — необязательное задание. Если вы его не выполните, это никак не повлияет на итоги ревью.
Инфраструктура
Настройте nginx так, чтобы запросы к адресам /api/ переадресовывались на бэкенд. Подключите админ-панель Django, настройте раздачу медиа и статики админки.
Учтите, что если ни один из предыдущих типов location не сработал, Nginx выберет блок location с наиболее длинным совпадающим префиксом запроса. Если есть несколько блоков с префиксами одинаковой длины, будет использован первый найденный в конфигурации.
Пагинация
Для реализации пагинации воспользуйтесь стандартным пагинатором DRF. Вам нужно будет лишь переопределить название поля, отвечающего за количество результатов в выдаче.
Список покупок файлом
Вам понадобится отдать пользователю файл со списком ингредиентов. Ровно такую же задачу вы не решали по ходу курса, но вы работали с view-функциями, а они умеют возвращать через HttpResponse не только текст, но и файлы.
Спецификация API
Спецификация — ваш лучший друг. В ней описаны все поля запросов и ответов, а также дополнительные GET-параметры.
API должен быть реализован строго по спецификации.
В директории postman_collection сохранена коллекция запросов для отладки и проверки работы проекта.
Когда проект будет готов обрабатывать запросы к API, импортируйте коллекцию в Postman и используйте её для отладки работы приложения.